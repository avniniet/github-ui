{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","github-ui/tests/app.jshint.lint-test.js","github-ui/tests/helpers/destroy-app.js","github-ui/tests/helpers/destroy-app.jshint.lint-test.js","github-ui/tests/helpers/module-for-acceptance.js","github-ui/tests/helpers/module-for-acceptance.jshint.lint-test.js","github-ui/tests/helpers/resolver.js","github-ui/tests/helpers/resolver.jshint.lint-test.js","github-ui/tests/helpers/start-app.js","github-ui/tests/helpers/start-app.jshint.lint-test.js","github-ui/tests/resolver.jshint.lint-test.js","github-ui/tests/router.jshint.lint-test.js","github-ui/tests/routes/home.jshint.lint-test.js","github-ui/tests/routes/home/mike.jshint.lint-test.js","github-ui/tests/routes/index.jshint.lint-test.js","github-ui/tests/routes/org.jshint.lint-test.js","github-ui/tests/routes/org/index.jshint.lint-test.js","github-ui/tests/routes/org/repo.jshint.lint-test.js","github-ui/tests/routes/org/repo/contributors.jshint.lint-test.js","github-ui/tests/routes/org/repo/index.jshint.lint-test.js","github-ui/tests/routes/org/repo/issues.jshint.lint-test.js","github-ui/tests/routes/org/repos.jshint.lint-test.js","github-ui/tests/routes/orgs.jshint.lint-test.js","github-ui/tests/test-helper.js","github-ui/tests/test-helper.jshint.lint-test.js","github-ui/tests/unit/routes/home-test.js","github-ui/tests/unit/routes/home-test.jshint.lint-test.js","github-ui/tests/unit/routes/home/mike-test.js","github-ui/tests/unit/routes/home/mike-test.jshint.lint-test.js","github-ui/tests/unit/routes/index-test.js","github-ui/tests/unit/routes/index-test.jshint.lint-test.js","github-ui/tests/unit/routes/org-test.js","github-ui/tests/unit/routes/org-test.jshint.lint-test.js","github-ui/tests/unit/routes/org/index-test.js","github-ui/tests/unit/routes/org/index-test.jshint.lint-test.js","github-ui/tests/unit/routes/org/repo-test.js","github-ui/tests/unit/routes/org/repo-test.jshint.lint-test.js","github-ui/tests/unit/routes/org/repo/contributors-test.js","github-ui/tests/unit/routes/org/repo/contributors-test.jshint.lint-test.js","github-ui/tests/unit/routes/org/repo/index-test.js","github-ui/tests/unit/routes/org/repo/index-test.jshint.lint-test.js","github-ui/tests/unit/routes/org/repo/issues-test.js","github-ui/tests/unit/routes/org/repo/issues-test.jshint.lint-test.js","github-ui/tests/unit/routes/org/repos-test.js","github-ui/tests/unit/routes/org/repos-test.jshint.lint-test.js","github-ui/tests/unit/routes/orgs-test.js","github-ui/tests/unit/routes/orgs-test.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('github-ui/tests/app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'app.js should pass jshint.\\napp.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 6, col 1, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 13, col 3, \\'object short notation\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 18, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n7 errors');\n  });\n});","define('github-ui/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('github-ui/tests/helpers/destroy-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('github-ui/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'github-ui/tests/helpers/start-app', 'github-ui/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _githubUiTestsHelpersStartApp, _githubUiTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _githubUiTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _githubUiTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('github-ui/tests/helpers/module-for-acceptance.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('github-ui/tests/helpers/resolver', ['exports', 'github-ui/resolver', 'github-ui/config/environment'], function (exports, _githubUiResolver, _githubUiConfigEnvironment) {\n\n  var resolver = _githubUiResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _githubUiConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _githubUiConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('github-ui/tests/helpers/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('github-ui/tests/helpers/start-app', ['exports', 'ember', 'github-ui/app', 'github-ui/config/environment'], function (exports, _ember, _githubUiApp, _githubUiConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _githubUiConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _githubUiApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('github-ui/tests/helpers/start-app.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('github-ui/tests/resolver.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'resolver.js should pass jshint.\\nresolver.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nresolver.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/router.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'router.js should pass jshint.\\nrouter.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 4, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nrouter.js: line 25, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors');\n  });\n});","define('github-ui/tests/routes/home.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/home.js should pass jshint.\\nroutes/home.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/home.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/home/mike.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/home/mike.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/home/mike.js should pass jshint.\\nroutes/home/mike.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/home/mike.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/index.js should pass jshint.\\nroutes/index.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/index.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/index.js: line 4, col 5, \\'concise methods\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nroutes/index.js: line 5, col 21, \\'spread operator\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors');\n  });\n});","define('github-ui/tests/routes/org.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org.js should pass jshint.\\nroutes/org.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/org/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org/index.js should pass jshint.\\nroutes/org/index.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org/index.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/org/repo.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org/repo.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org/repo.js should pass jshint.\\nroutes/org/repo.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org/repo.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/org/repo/contributors.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org/repo/contributors.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org/repo/contributors.js should pass jshint.\\nroutes/org/repo/contributors.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org/repo/contributors.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/org/repo/index.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org/repo/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org/repo/index.js should pass jshint.\\nroutes/org/repo/index.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org/repo/index.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/org/repo/issues.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org/repo/issues.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org/repo/issues.js should pass jshint.\\nroutes/org/repo/issues.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org/repo/issues.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/org/repos.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/org/repos.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/org/repos.js should pass jshint.\\nroutes/org/repos.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/org/repos.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/routes/orgs.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/orgs.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/orgs.js should pass jshint.\\nroutes/orgs.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/orgs.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('github-ui/tests/test-helper', ['exports', 'github-ui/tests/helpers/resolver', 'ember-qunit'], function (exports, _githubUiTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_githubUiTestsHelpersResolver['default']);\n});","define('github-ui/tests/test-helper.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/home-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home', 'Unit | Route | home', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/home-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/home/mike-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:home/mike', 'Unit | Route | home/mike', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/home/mike-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/home/mike-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/home/mike-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org', 'Unit | Route | org', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org/index', 'Unit | Route | org/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/index-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org/repo-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org/repo', 'Unit | Route | org/repo', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org/repo-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org/repo-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org/repo/contributors-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org/repo/contributors', 'Unit | Route | org/repo/contributors', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org/repo/contributors-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org/repo/contributors-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo/contributors-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org/repo/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org/repo/index', 'Unit | Route | org/repo/index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org/repo/index-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org/repo/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo/index-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org/repo/issues-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org/repo/issues', 'Unit | Route | org/repo/issues', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org/repo/issues-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org/repo/issues-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repo/issues-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/org/repos-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:org/repos', 'Unit | Route | org/repos', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/org/repos-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/org/repos-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/org/repos-test.js should pass jshint.');\n  });\n});","define('github-ui/tests/unit/routes/orgs-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:orgs', 'Unit | Route | orgs', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('github-ui/tests/unit/routes/orgs-test.jshint.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/orgs-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/orgs-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('github-ui/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfile":"tests.js"}